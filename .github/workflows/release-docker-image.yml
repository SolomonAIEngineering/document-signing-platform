name: Server Build and Release

on:
  push:
    branches: ['main']
  workflow_dispatch:
  workflow_call:
    inputs:
      image_tag:
        description: 'Specific image tag to use (defaults to github.ref_name)'
        required: false
        type: string
    outputs:
      image_tag:
        description: 'The tag of the built Docker image'
        value: ${{ jobs.build.outputs.image_tag }}
    secrets:
      GH_TOKEN:
        description: 'GitHub token with packages:write scope'
        required: true
      IPINFO_ACCESS_TOKEN:
        description: 'IPINFO access token'
        required: false
jobs:
  build:
    name: 'Server: Build 🐳'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.set_tag.outputs.image_tag }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Set image tag
        id: set_tag
        run: |
          if [ -n "${{ inputs.image_tag }}" ]; then
            IMAGE_TAG="${{ inputs.image_tag }}"
          else
            IMAGE_TAG="${GITHUB_REF##*/}"
            if [ "$IMAGE_TAG" = "main" ]; then
              IMAGE_TAG="latest"
            fi
          fi
          echo "Using image tag: $IMAGE_TAG"
          echo "image_tag=$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/SolomonAIEngineering/document-signing-platform
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest

      - uses: docker/build-push-action@v6
        id: push
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          context: .
          file: ./docker/Dockerfile
          platforms: linux/amd64
          build-args: |
            RELEASE_VERSION=${{ github.sha }}
          secrets: |
            IPINFO_ACCESS_TOKEN=${{ secrets.IPINFO_ACCESS_TOKEN }}
