name: Deploy to Production

on:
  push:
    tags:
      - '*'
  workflow_dispatch: # Allow manual triggering

jobs:
  deploy-app:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          token: ${{ secrets.GH_TOKEN }}

      - name: Extract version for branch name
        id: extract_branch_version
        run: |
          # Get the exact tag that triggered this workflow
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            # Extract the tag from the ref (refs/tags/v1.2.3 -> v1.2.3)
            VERSION=${GITHUB_REF#refs/tags/}
          else
            # Fallback to the latest tag if triggered manually
            VERSION=$(git describe --tags --abbrev=0)
          fi

          # Clean the version for use in branch name (remove any invalid chars)
          BRANCH_VERSION=$(echo $VERSION | sed 's/[^a-zA-Z0-9._-]/-/g')
          echo "branch_version=$BRANCH_VERSION" >> $GITHUB_OUTPUT

      - name: Push to versioned release branch
        run: |
          # Create a release branch with the version in the name
          RELEASE_BRANCH="release-${{ steps.extract_branch_version.outputs.branch_version }}"
          echo "Creating/updating release branch: $RELEASE_BRANCH"

          git checkout $RELEASE_BRANCH 2>/dev/null || git checkout -b $RELEASE_BRANCH
          git merge --ff-only main
          git push origin $RELEASE_BRANCH

      - name: Extract version
        id: extract_version
        run: |
          # Get the exact tag that triggered this workflow
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            # Extract the tag from the ref (refs/tags/v1.2.3 -> v1.2.3)
            VERSION=${GITHUB_REF#refs/tags/}
          else
            # Fallback to the latest tag if triggered manually
            VERSION=$(git describe --tags --abbrev=0)
          fi

          echo "Using version from tag: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build-docker:
    needs: deploy-app
    uses: ./.github/workflows/release-docker-image.yml
    with:
      image_tag: ${{ needs.deploy-app.outputs.version }}
    secrets:
      GH_TOKEN: ${{ secrets.GH_TOKEN }}
      IPINFO_ACCESS_TOKEN: ${{ secrets.IPINFO_ACCESS_TOKEN }}

  deploy-chart:
    needs: [build-docker]
    uses: ./.github/workflows/deploy-helm-direct-template.yml
    with:
      service_name: document-management-platform
      service_path: .
      chart_path: charts/document-management-platform
      namespace: document-management
      create_namespace: true
